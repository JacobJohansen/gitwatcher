package v1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitWebHookExecution) DeepCopyInto(out *GitWebHookExecution) {
	*out = *in
	out.Namespaced = in.Namespaced
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitWebHookExecution.
func (in *GitWebHookExecution) DeepCopy() *GitWebHookExecution {
	if in == nil {
		return nil
	}
	out := new(GitWebHookExecution)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GitWebHookExecution) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitWebHookExecutionList) DeepCopyInto(out *GitWebHookExecutionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GitWebHookExecution, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitWebHookExecutionList.
func (in *GitWebHookExecutionList) DeepCopy() *GitWebHookExecutionList {
	if in == nil {
		return nil
	}
	out := new(GitWebHookExecutionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GitWebHookExecutionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitWebHookExecutionSpec) DeepCopyInto(out *GitWebHookExecutionSpec) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitWebHookExecutionSpec.
func (in *GitWebHookExecutionSpec) DeepCopy() *GitWebHookExecutionSpec {
	if in == nil {
		return nil
	}
	out := new(GitWebHookExecutionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitWebHookExecutionStatus) DeepCopyInto(out *GitWebHookExecutionStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitWebHookExecutionStatus.
func (in *GitWebHookExecutionStatus) DeepCopy() *GitWebHookExecutionStatus {
	if in == nil {
		return nil
	}
	out := new(GitWebHookExecutionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitWebHookReceiver) DeepCopyInto(out *GitWebHookReceiver) {
	*out = *in
	out.Namespaced = in.Namespaced
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitWebHookReceiver.
func (in *GitWebHookReceiver) DeepCopy() *GitWebHookReceiver {
	if in == nil {
		return nil
	}
	out := new(GitWebHookReceiver)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GitWebHookReceiver) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitWebHookReceiverList) DeepCopyInto(out *GitWebHookReceiverList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GitWebHookReceiver, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitWebHookReceiverList.
func (in *GitWebHookReceiverList) DeepCopy() *GitWebHookReceiverList {
	if in == nil {
		return nil
	}
	out := new(GitWebHookReceiverList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GitWebHookReceiverList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitWebHookReceiverSpec) DeepCopyInto(out *GitWebHookReceiverSpec) {
	*out = *in
	if in.ExecutionLabels != nil {
		in, out := &in.ExecutionLabels, &out.ExecutionLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitWebHookReceiverSpec.
func (in *GitWebHookReceiverSpec) DeepCopy() *GitWebHookReceiverSpec {
	if in == nil {
		return nil
	}
	out := new(GitWebHookReceiverSpec)
	in.DeepCopyInto(out)
	return out
}
